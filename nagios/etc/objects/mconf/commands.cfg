define command{
	command_name	check_dummy
	command_line	$USER1$/check_dummy $ARG1$ $ARG2$
}

define command{
	command_name	add_mconf_host
	command_line	$USER1$/mconf-hosts/add-server $SERVICESTATE$ $SERVICESTATETYPE$ $SERVICEATTEMPT$ $USER1$ $SERVICEOUTPUT$ >> /home/nagios/add_mconf_host.log 2>&1
}

define command{
	command_name	get_bigbluebutton_info
	command_line	$USER1$/bigbluebutton/get-bigbluebutton-info.py --host $_HOSTBBB_URL$ --salt $_HOSTBBB_SALT$ # (removing the limits)--limits 5,10,5,5:10,20,10,10
}

define command {
	command_name	process-service-perfdata-for-nagiosgraph
	command_line	/usr/lib/nagiosgraph/insert.pl "$LASTSERVICECHECK$||$HOSTNAME$||$SERVICEDESC$||$SERVICEOUTPUT$||$SERVICEPERFDATA$"
}

define command {
	command_name	process-host-perfdata-for-nagiosgraph
	command_line	/usr/lib/nagiosgraph/insert.pl "$LASTHOSTCHECK$||$HOSTNAME$||PING||$HOSTOUTPUT$||$HOSTPERFDATA$"
}

define command {
	command_name	service-out-of-date
	command_line	$USER1$/check_dummy 3 "This service is out-of-date"
}

define command {
	command_name	check-rtmp
	command_line	$USER1$/check_tcp -H $HOSTNAME$ -p 1935
}

define command {
	command_name	check-deskshare
	command_line	$USER1$/check_tcp -H $HOSTNAME$ -p 9123
}

define command {
	command_name	check-sip
	command_line	$USER1$/nagios-check_sip-1.3/check_sip -u sip:mconf@$HOSTNAME$ -H $HOSTNAME$ -p 5060 -w 5
}

# the bigbluebutton demo shouldn't be there, so we will generate a warning if it's there, otherwise it's ok
define command {
	command_name	check-demo-presence
	command_line	$USER1$/negate --ok WARNING --warning OK --critical CRITICAL --unknown UNKNOWN $USER1$/check_http --hostname $HOSTADDRESS$ --port $_HOSTBBB_PORT$ --url /demo/demo1.jsp
}

# check if the live notes server is working
define command {
	command_name	check-notes-server
	command_line    $USER1$/check_http --hostname $HOSTADDRESS$ --port $_HOSTBBB_PORT$ --url /bigbluebutton/notes.jsp --timeout 15 --verbose --regex "Read timed out.*"
}

# check if the API is working
define command {
	command_name	check-bbb-api
	command_line	$USER1$/check_http --hostname $HOSTADDRESS$ --port $_HOSTBBB_PORT$ --url /bigbluebutton/api --regex "<response>.*<returncode>SUCCESS</returncode>.*<version>0.8</version>.*</response>"
}

define command {
	command_name	check-bbb-version
	command_line	$USER1$/check_http --hostname $HOSTADDRESS$ --port $_HOSTBBB_PORT$ --url /client/conf/config.xml --string "<version>mconf-live0.2</version>"
}

# if the host is not accessible by ssh, it will generate just a warning
define command {
	command_name	check-ssh
	command_line	$USER1$/negate --ok OK --warning WARNING --critical WARNING --unknown WARNING $USER1$/check_ssh $HOSTADDRESS$ --timeout 5
}

